//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.3603
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 2.0.5.0
// 
namespace SLReglas.DBService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttrReglas", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class AttrReglas : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal IDReglaField;
        
        private string NomRegalField;
        
        private System.Nullable<decimal> IDAttRelacionadoField;
        
        private string NomModoEjecucionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal IDRegla {
            get {
                return this.IDReglaField;
            }
            set {
                if ((this.IDReglaField.Equals(value) != true)) {
                    this.IDReglaField = value;
                    this.RaisePropertyChanged("IDRegla");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomRegal {
            get {
                return this.NomRegalField;
            }
            set {
                if ((object.ReferenceEquals(this.NomRegalField, value) != true)) {
                    this.NomRegalField = value;
                    this.RaisePropertyChanged("NomRegal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<decimal> IDAttRelacionado {
            get {
                return this.IDAttRelacionadoField;
            }
            set {
                if ((this.IDAttRelacionadoField.Equals(value) != true)) {
                    this.IDAttRelacionadoField = value;
                    this.RaisePropertyChanged("IDAttRelacionado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string NomModoEjecucion {
            get {
                return this.NomModoEjecucionField;
            }
            set {
                if ((object.ReferenceEquals(this.NomModoEjecucionField, value) != true)) {
                    this.NomModoEjecucionField = value;
                    this.RaisePropertyChanged("NomModoEjecucion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="DBService.DBService1")]
    public interface DBService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DBService1/GetRules", ReplyAction="urn:DBService1/GetRulesResponse")]
        System.IAsyncResult BeginGetRules(int pAttr, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.Collection<SLReglas.DBService.AttrReglas> EndGetRules(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DBService1/SaveRule", ReplyAction="urn:DBService1/SaveRuleResponse")]
        System.IAsyncResult BeginSaveRule(System.Collections.ObjectModel.Collection<SLReglas.DBService.AttrReglas> preglas, int pIDattRel, System.AsyncCallback callback, object asyncState);
        
        void EndSaveRule(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface DBService1Channel : SLReglas.DBService.DBService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.Collection<SLReglas.DBService.AttrReglas> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.Collection<SLReglas.DBService.AttrReglas>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class DBService1Client : System.ServiceModel.ClientBase<SLReglas.DBService.DBService1>, SLReglas.DBService.DBService1 {
        
        private BeginOperationDelegate onBeginGetRulesDelegate;
        
        private EndOperationDelegate onEndGetRulesDelegate;
        
        private System.Threading.SendOrPostCallback onGetRulesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveRuleDelegate;
        
        private EndOperationDelegate onEndSaveRuleDelegate;
        
        private System.Threading.SendOrPostCallback onSaveRuleCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DBService1Client() {
        }
        
        public DBService1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DBService1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBService1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBService1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetRulesCompletedEventArgs> GetRulesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveRuleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SLReglas.DBService.DBService1.BeginGetRules(int pAttr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRules(pAttr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.Collection<SLReglas.DBService.AttrReglas> SLReglas.DBService.DBService1.EndGetRules(System.IAsyncResult result) {
            return base.Channel.EndGetRules(result);
        }
        
        private System.IAsyncResult OnBeginGetRules(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pAttr = ((int)(inValues[0]));
            return ((SLReglas.DBService.DBService1)(this)).BeginGetRules(pAttr, callback, asyncState);
        }
        
        private object[] OnEndGetRules(System.IAsyncResult result) {
            System.Collections.ObjectModel.Collection<SLReglas.DBService.AttrReglas> retVal = ((SLReglas.DBService.DBService1)(this)).EndGetRules(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRulesCompleted(object state) {
            if ((this.GetRulesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRulesCompleted(this, new GetRulesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRulesAsync(int pAttr) {
            this.GetRulesAsync(pAttr, null);
        }
        
        public void GetRulesAsync(int pAttr, object userState) {
            if ((this.onBeginGetRulesDelegate == null)) {
                this.onBeginGetRulesDelegate = new BeginOperationDelegate(this.OnBeginGetRules);
            }
            if ((this.onEndGetRulesDelegate == null)) {
                this.onEndGetRulesDelegate = new EndOperationDelegate(this.OnEndGetRules);
            }
            if ((this.onGetRulesCompletedDelegate == null)) {
                this.onGetRulesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRulesCompleted);
            }
            base.InvokeAsync(this.onBeginGetRulesDelegate, new object[] {
                        pAttr}, this.onEndGetRulesDelegate, this.onGetRulesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SLReglas.DBService.DBService1.BeginSaveRule(System.Collections.ObjectModel.Collection<SLReglas.DBService.AttrReglas> preglas, int pIDattRel, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveRule(preglas, pIDattRel, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SLReglas.DBService.DBService1.EndSaveRule(System.IAsyncResult result) {
            base.Channel.EndSaveRule(result);
        }
        
        private System.IAsyncResult OnBeginSaveRule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.Collection<SLReglas.DBService.AttrReglas> preglas = ((System.Collections.ObjectModel.Collection<SLReglas.DBService.AttrReglas>)(inValues[0]));
            int pIDattRel = ((int)(inValues[1]));
            return ((SLReglas.DBService.DBService1)(this)).BeginSaveRule(preglas, pIDattRel, callback, asyncState);
        }
        
        private object[] OnEndSaveRule(System.IAsyncResult result) {
            ((SLReglas.DBService.DBService1)(this)).EndSaveRule(result);
            return null;
        }
        
        private void OnSaveRuleCompleted(object state) {
            if ((this.SaveRuleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveRuleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveRuleAsync(System.Collections.ObjectModel.Collection<SLReglas.DBService.AttrReglas> preglas, int pIDattRel) {
            this.SaveRuleAsync(preglas, pIDattRel, null);
        }
        
        public void SaveRuleAsync(System.Collections.ObjectModel.Collection<SLReglas.DBService.AttrReglas> preglas, int pIDattRel, object userState) {
            if ((this.onBeginSaveRuleDelegate == null)) {
                this.onBeginSaveRuleDelegate = new BeginOperationDelegate(this.OnBeginSaveRule);
            }
            if ((this.onEndSaveRuleDelegate == null)) {
                this.onEndSaveRuleDelegate = new EndOperationDelegate(this.OnEndSaveRule);
            }
            if ((this.onSaveRuleCompletedDelegate == null)) {
                this.onSaveRuleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveRuleCompleted);
            }
            base.InvokeAsync(this.onBeginSaveRuleDelegate, new object[] {
                        preglas,
                        pIDattRel}, this.onEndSaveRuleDelegate, this.onSaveRuleCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SLReglas.DBService.DBService1 CreateChannel() {
            return new DBService1ClientChannel(this);
        }
        
        private class DBService1ClientChannel : ChannelBase<SLReglas.DBService.DBService1>, SLReglas.DBService.DBService1 {
            
            public DBService1ClientChannel(System.ServiceModel.ClientBase<SLReglas.DBService.DBService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetRules(int pAttr, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pAttr;
                System.IAsyncResult _result = base.BeginInvoke("GetRules", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.Collection<SLReglas.DBService.AttrReglas> EndGetRules(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.Collection<SLReglas.DBService.AttrReglas> _result = ((System.Collections.ObjectModel.Collection<SLReglas.DBService.AttrReglas>)(base.EndInvoke("GetRules", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveRule(System.Collections.ObjectModel.Collection<SLReglas.DBService.AttrReglas> preglas, int pIDattRel, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = preglas;
                _args[1] = pIDattRel;
                System.IAsyncResult _result = base.BeginInvoke("SaveRule", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveRule(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveRule", _args, result);
            }
        }
    }
}
